package com.example.stix.api.objects;

import com.example.stix.api.StixType;
import com.example.stix.api.datatypes.ExternalReference;

import java.util.List;

/*
* A Vulnerability is "a mistake in software that can be directly used by a hacker to gain access to a system or
* network" [CVE]. For example, if a piece of malware exploits CVE-2015-12345, a Malware object could be linked to a
* Vulnerability object that references CVE-2015-12345.
*
* The Vulnerability SDO is primarily used to link to external definitions of vulnerabilities or to describe 0-day
* vulnerabilities that do not yet have an external definition. Typically, other SDOs assert relationships to
* Vulnerability datatypes when a specific vulnerability is targeted and exploited as part of malicious cyber activity.
* As such, Vulnerability datatypes can be used as a linkage to the asset management and compliance process.
* */
public interface Vulnerability extends StixDomainObject {

    /*
    * The value of this property MUST be "vulnerability".
    *
    * REQUIRED
    * */
    String TYPE = "vulnerability";

    @Override
    default StixType getType() {
        return StixType.VULNERABILITY;
    }


    /*
    * A list of external references which refer to non-STIX information. This property MAY be used to provide one or
    * more Vulnerability identifiers, such as a CVE ID [CVE]. When specifying a CVE ID, the source_name property of
    * the external reference MUST be set to cve and the external_id property MUST be the exact CVE identifier.
    *
    * OPTIONAL
    * */
    String EXTERNAL_REFERENCES_PROPERTY = "external_references";

    @Override
    List<ExternalReference> getExternalReferences();


    /*
    * A name used to identify the Vulnerability.
    *
    * REQUIRED
    * */
    String NAME_PROPERTY = "name";

    String getName();


    /*
    * A description that provides more details and context about the Vulnerability, potentially including its
    * purpose and its key characteristics.
    *
    * OPTIONAL
    * */
    String DESCRIPTION_PROPERTY = "description";

    String getDescription();

}
