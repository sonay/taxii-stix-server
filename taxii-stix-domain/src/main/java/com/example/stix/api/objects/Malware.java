package com.example.stix.api.objects;


import com.example.stix.api.StixType;
import com.example.stix.api.datatypes.KillChainPhase;

import java.util.List;

/*
* Type Name: malware
*
* Note: The Malware object in STIX 2.0 is a stub. It is included to support basic use cases but is likely not useful for
* actual malware analysis or for including even simple malware instance data. Future versions of STIX 2 will expand it
* to include these capabilities.
*
* Malware is a type of TTP that is also known as malicious code and malicious software, and refers to a program that is
* inserted into a system, usually covertly, with the intent of compromising the confidentiality, integrity, or
* availability of the victim's data, applications, or operating system (OS) or of otherwise annoying or disrupting the
* victim. Malware such as viruses and worms are usually designed to perform these nefarious functions in such a way that
 * users are unaware of them, at least initially.[1]
*
* The Malware SDO characterizes, identifies, and categorizes malware samples and families via a text description
* property. This provides detailed information about how the malware works and what it does. Relationships from Malware
* can capture what the malware targets (Vulnerability and Identity) and link it to another Malware SDO that it is a
* variant of.
* */
public interface Malware extends StixDomainObject {

    /*
    * The value of this property MUST be "malware".
    *
    * REQUIRED
    * */
    String TYPE = "malware";

    @Override
    default StixType getType() {
        return StixType.MALWARE;
    }

    /*
    * The type of malware being described.
    *
    * This is an open vocabulary and values SHOULD come from the malware-label-ov vocabulary.
    *
    * REQUIRED
    * */
    String LABELS_PROPERTY = "labels";

    @Override
    List<String> getLabels();


    /*
    * A name used to identify the Malware sample.
    *
    * REQUIRED
    * */
    String NAME_PROPERTY = "name";

    String getName();


    /*
    * A description that provides more details and context about the Malware, potentially including its purpose and its
    * key characteristics.
    *
    * OPTIONAL
    * */
    String DESCRIPTION_PROPERTY = "description";

    String getDescription();


    /*
    * The list of Kill Chain Phases for which this Malware can be used.
    *
    * OPTIONAL
    * */
    String KILL_CHAIN_PHASES_PROPERTY = "kill_chain_phases";

    List<KillChainPhase> getKillChainPhases();

}
