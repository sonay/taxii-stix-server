package com.example.stix.validation.objects;

import com.example.stix.api.CommonProperties;
import com.example.stix.api.datatypes.KillChainPhase;
import com.example.stix.api.objects.Malware;
import com.example.stix.api.vocabularies.MalwareLabelVocabulary;
import com.example.stix.validation.ValidationMessages;
import com.example.stix.validation.ValidationStrategy;

import java.util.List;

import static com.example.stix.validation.ValidationHelper.basicOptionalCheck;
import static com.example.stix.validation.ValidationHelper.basicRequiredCheck;


public class MalwareValidator extends CommonPropertiesValidator {

    public void validate(Malware malware, ValidationStrategy strategy) {
        super.validate(malware, strategy);

        basicRequiredCheck(Malware.NAME_PROPERTY, malware.getName(), strategy);
        basicOptionalCheck(Malware.DESCRIPTION_PROPERTY, malware.getDescription(), strategy);

        List<KillChainPhase> killChainPhases = malware.getKillChainPhases();
        if ((killChainPhases != null)
                && basicOptionalCheck(Malware.KILL_CHAIN_PHASES_PROPERTY, killChainPhases, strategy)) {
            // TODO: validate
        }
    }

    @Override
    public void validate(CommonProperties malware, ValidationStrategy strategy) {
        List<String> labels = malware.getLabels();
        if (basicRequiredCheck(Malware.LABELS_PROPERTY, labels, strategy)) {
            for (String label : labels) {
                if (!MalwareLabelVocabulary.isStandard(label)) {
                    strategy.onPropertyWarning(Malware.LABELS_PROPERTY,
                            ValidationMessages.MALWARE_LABEL_VOCABULARY_WARNING);
                    break;
                }
            }
        }
    }

}
