package com.example.stix.serialization.jackson.test;

import com.example.stix.api.BundleObject;
import com.example.stix.api.objects.Vulnerability;
import com.example.stix.impl.objects.VulnerabilityImpl;
import com.example.stix.serialization.jackson.config.ObjectMapperConfiguration;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import java.io.IOException;

public class VulnerabilityTest {

    private final String vulnerability_0 = "{\n" +
            "\n" +
            "  \"type\": \"vulnerability\",\n" +
            "\n" +
            "  \"id\": \"vulnerability--0c7b5b88-8ff7-4a4d-aa9d-feb398cd0061\",\n" +
            "\n" +
            "  \"created\": \"2016-05-12T08:17:27.000Z\",\n" +
            "\n" +
            "  \"modified\": \"2016-05-12T08:17:27.000Z\",\n" +
            "\n" +
            "  \"name\": \"CVE-2016-1234\",\n" +
            "\n" +
            "  \"external_references\": [\n" +
            "\n" +
            "    {\n" +
            "\n" +
            "      \"source_name\": \"cve\",\n" +
            "\n" +
            "      \"external_id\": \"CVE-2016-1234\"\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "  ]\n" +
            "\n" +
            "}";

    private final String vulnerability_1 = "{\n" +
            "\n" +
            "  \"id\": \"vulnerability--ee916c28-c7a4-4d0d-ad56-a8d357f89fef\",\n" +
            "\n" +
            "  \"created\": \"2016-02-14T00:00:00.000Z\",\n" +
            "\n" +
            "  \"modified\": \"2016-02-14T00:00:00.000Z\",\n" +
            "\n" +
            "  \"type\": \"vulnerability\",\n" +
            "\n" +
            "  \"name\": \"CVE-2014-0160\",\n" +
            "\n" +
            "  \"description\": \"The (1) TLS...\",\n" +
            "\n" +
            "  \"external_references\": [{\n" +
            "\n" +
            "    \"source_name\": \"cve\",\n" +
            "\n" +
            "    \"external_id\": \"CVE-2014-0160\"\n" +
            "\n" +
            "  }],\n" +
            "\n" +
            "  \"labels\": [\"heartbleed\", \"has-logo\"]\n" +
            "\n" +
            "}";

    private ObjectMapper mapper;

    @Before
    public void setUp() {
        mapper = ObjectMapperConfiguration.buildObjectMapper();
    }

    @After
    public void tearDown() {
        mapper = null;
    }

    @Test
    public void deserializeAsBundleObject() throws IOException {
        asBundleObject(vulnerability_0);
        asBundleObject(vulnerability_1);
    }

    @Test
    public void asVulnerability() throws IOException {
        asVulnerability(vulnerability_0);
        asVulnerability(vulnerability_1);
    }

    @Test
    public void deserializeAsVulnerabilityImpl() throws IOException {
        asVulnerabilityImpl(vulnerability_0);
        asVulnerabilityImpl(vulnerability_1);
    }

    private void asVulnerabilityImpl(String value) throws IOException {
        VulnerabilityImpl pattern = mapper.readValue(value, VulnerabilityImpl.class);
        String serialized = mapper.writeValueAsString(pattern);
        Assert.assertTrue(DiffenceChecker.areEqual(mapper, value, serialized));
    }

    private void asVulnerability(String value) throws IOException {
        Vulnerability pattern = mapper.readValue(value, Vulnerability.class);
        String serialized = mapper.writeValueAsString(pattern);
        Assert.assertTrue(DiffenceChecker.areEqual(mapper, value, serialized));
    }

    private void asBundleObject(String value) throws IOException {
        BundleObject pattern = mapper.readValue(value, BundleObject.class);
        String serialized = mapper.writeValueAsString(pattern);
        Assert.assertTrue(DiffenceChecker.areEqual(mapper, value, serialized));
    }

}
